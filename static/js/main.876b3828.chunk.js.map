{"version":3,"sources":["components/Board.js","components/Game.js","App.js","index.js"],"names":["Board","setrow","setcolumn","setsequence","setstartgame","row","column","sequence","className","type","min","onChange","e","target","value","placeholder","disabled","onClick","Game","setgame","game","useState","boolean","setboolean","win","setwin","draw","setdraw","disable","setdisable","temp","useEffect","document","querySelector","style","setProperty","checkLeft","index","checkRight","Number","checkTop","checkBottom","horizontal","counter","symbol","winningindex","i","push","length","classList","add","finishGame","vertical","k","nMainDiagonal","MainDiagonal","clickhandler","filter","word","map","item","window","location","reload","App","startgame","Array","fill","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.876b3828.chunk.js","sourcesContent":["import React from 'react'\r\nimport './css/board.css';\r\nconst Board = ({setrow,setcolumn,setsequence,setstartgame,row,column,sequence}) => {\r\n    return (\r\n        <div className='board' >\r\n            <h1>Tic Tac Toe</h1>\r\n            <div className=\"Board-input-container\" >\r\n                <h3>Change the row</h3>\r\n                <input type='number' min='3' onChange={(e)=>setrow(e.target.value)} placeholder='min 3' />\r\n            </div>\r\n            <div className=\"Board-input-container\" >\r\n                <h3>Change the Column</h3>\r\n                <input type='number' min='3' onChange={(e)=>setcolumn(e.target.value)} placeholder='min 3' />\r\n            </div>\r\n            <div className=\"Board-input-container\" >\r\n                <h3>winning point?</h3>\r\n                <input type='number' min='3' onChange={(e)=>setsequence(e.target.value)} placeholder='sequence' />\r\n            </div>\r\n            {column <3 || row <3 || sequence<3 ? \r\n            <button disabled className=\"disabled\" onClick={()=>{setstartgame(true)}}>Start game</button>\r\n            :\r\n            <button className=\"Board-btn\" onClick={()=>{setstartgame(true)}}>Start game</button>\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board\r\n","import React,{useState,useEffect} from 'react'\r\nimport './css/game.css';\r\nconst Game = ({setgame,game,row, column, sequence}) => {\r\n    \r\n    const [boolean, setboolean] = useState(true);\r\n    const [win, setwin] = useState(false);\r\n    const [draw, setdraw] = useState(false);\r\n    const [disable, setdisable] = useState(false);\r\n    var temp=[...game];\r\n    useEffect(() => {\r\n        setgame([...temp]);\r\n        document.querySelector('.game').style.setProperty('grid-template-columns', 'repeat(' + row + ', 50px)');\r\n    }, [])\r\n\r\n    //Check symbol positions\r\n    const checkLeft=(index)=>{\r\n        if(index%row===0){\r\n            return 1\r\n        }else{\r\n            return 0\r\n        }\r\n    }\r\n    const checkRight=(index)=>{\r\n        if((Number(index)+1)%row===0){\r\n            return 1\r\n        }else{\r\n            return 0\r\n        }\r\n    }\r\n    const checkTop=(index)=>{\r\n        if(Number(index)<row){\r\n            return 1\r\n        }else{\r\n            return 0\r\n        }\r\n    }\r\n    const checkBottom=(index)=>{\r\n        if(index<row*column && index>=row*column-row){\r\n            return 1\r\n        }else{\r\n            return 0\r\n        }\r\n    }\r\n    //Winning positions\r\n    const checkWin=(index)=>{\r\n        vertical(index);\r\n        horizontal(index);\r\n        nMainDiagonal(index);\r\n        MainDiagonal(index);\r\n    }\r\n    //Draw position\r\n    const checkDraw=()=>{\r\n        if(temp.filter(word=>word===\"\").length==0){\r\n            setdisable(true);\r\n            setdraw(true);\r\n        }\r\n    }\r\n    //Game logic\r\n    const horizontal=(index)=>{\r\n        var counter=1;\r\n        var symbol=boolean? \"X\":\"0\";\r\n        var winningindex=[Number(index)];\r\n        for(let i=1;i<=sequence;i++){\r\n            if(checkRight(Number(index)+i-1)===1){\r\n                break;\r\n            }else{\r\n                if(temp[Number(index)+i]===symbol){\r\n                    counter++;  \r\n                    winningindex.push(Number(index)+i);\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for(let i=1;i<=sequence;i++){\r\n            if(checkLeft(Number(index)-i+1)===1){\r\n                break\r\n            }else{\r\n                if(temp[Number(index)-i]===symbol){\r\n                    counter++;  \r\n                    winningindex.push(Number(index)-i)\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(counter >= sequence){\r\n            for(let i=0;i<winningindex.length;i++){\r\n                document.querySelector(`.game button:nth-child(${winningindex[i]+1})`).classList.add('Winner')\r\n            }\r\n            finishGame();\r\n        }\r\n    }\r\n    \r\n    const vertical=(index)=>{\r\n        var counter=1;\r\n        var symbol=boolean? \"X\":\"0\";\r\n        var winningindex=[Number(index)];\r\n        for(let i=1,k=Number(row);i<=sequence;i++,k+=Number(row)){\r\n            if(checkBottom(Number(index)+k-Number(row))===1){\r\n                break;\r\n            }else{\r\n                if(temp[Number(index)+k]===symbol){\r\n                    counter++;  \r\n                    winningindex.push(Number(index)+k);\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for(let i=1,k=Number(row);i<=sequence;i++,k+=Number(row)){\r\n            \r\n            if(checkTop(Number(index)-k+Number(row))===1){\r\n                break\r\n            }else{\r\n                if(temp[Number(index)-k]===symbol){\r\n                    counter++;  \r\n                    winningindex.push(Number(index)-k)\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(counter >= sequence){\r\n            for(let i=0;i<winningindex.length;i++){\r\n                document.querySelector(`.game button:nth-child(${winningindex[i]+1})`).classList.add('Winner')\r\n            }\r\n            finishGame();\r\n        }\r\n    }\r\n\r\n    const nMainDiagonal=(index)=>{\r\n        var counter=1;\r\n        var symbol=boolean? \"X\":\"0\";\r\n        var winningindex=[Number(index)];\r\n        for(let i=1,k=Number(row)+1;i<=sequence;i++,k+=Number(row)+1){\r\n            if(checkBottom(Number(index)+k-Number(row)-1)===1 ||checkRight(Number(index)+k-Number(row)-1)===1){\r\n                break;\r\n            }else{\r\n                if(temp[Number(index)+k]===symbol){\r\n                    counter++; \r\n                    winningindex.push(Number(index)+k); \r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for(let i=1,k=Number(row)+1;i<=sequence;i++,k+=Number(row)+1){\r\n            \r\n            if(checkTop(Number(index)-k+Number(row)+1)===1 || checkLeft(Number(index)-k+Number(row)+1)===1){\r\n                break\r\n            }else{\r\n                if(temp[Number(index)-k]===symbol){\r\n                    counter++;  \r\n                    winningindex.push(Number(index)-k);\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(counter >= sequence){\r\n            for(let i=0;i<winningindex.length;i++){\r\n                document.querySelector(`.game button:nth-child(${winningindex[i]+1})`).classList.add('Winner')\r\n            }\r\n            finishGame();\r\n        }\r\n    }\r\n\r\n    const MainDiagonal=(index)=>{\r\n        var counter=1;\r\n        var symbol=boolean? \"X\":\"0\";\r\n        var winningindex=[Number(index)];\r\n        for(let i=1,k=Number(row)-1;i<=sequence;i++,k+=Number(row)-1){\r\n            if(checkBottom(Number(index)+k-Number(row)+1)===1 ||checkLeft(Number(index)+k-Number(row)+1)===1){\r\n                break;\r\n            }else{\r\n                if(temp[Number(index)+k]===symbol){\r\n                    counter++;  \r\n                    winningindex.push(Number(index)+k);\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        for(let i=1,k=Number(row)-1;i<=sequence;i++,k+=Number(row)-1){\r\n            \r\n            if(checkTop(Number(index)-k+Number(row)-1)===1 || checkRight(Number(index)-k+Number(row)-1)===1){\r\n                break\r\n            }else{\r\n                if(temp[Number(index)-k]===symbol){\r\n                    counter++;  \r\n                    winningindex.push(Number(index)-k);\r\n                }else{\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        if(counter >= sequence){\r\n            for(let i=0;i<winningindex.length;i++){\r\n                document.querySelector(`.game button:nth-child(${winningindex[i]+1})`).classList.add('Winner')\r\n            }\r\n            finishGame();\r\n        }\r\n    }\r\n    const finishGame=()=>{\r\n        setdisable(true);\r\n        setwin(true);\r\n    }\r\n    const clickhandler=(e)=>{\r\n        if(boolean){\r\n            if(temp[e.target.value]==''){\r\n                temp[e.target.value]=\"X\";\r\n                setboolean(!boolean);\r\n            }\r\n        }else{\r\n            if(temp[e.target.value]==''){\r\n                temp[e.target.value]=\"0\";\r\n                setboolean(!boolean);\r\n            }\r\n        }\r\n        setgame(temp)\r\n        checkWin(e.target.value);\r\n        checkDraw(e.target.value);\r\n    }\r\n    return (\r\n        <div className='game-container'>\r\n            <div className='game-textholder' >\r\n                <h1>Tic-Tac-Toe</h1>\r\n            </div>\r\n            <div className=\"game\">\r\n                {\r\n                    game.map((item,index)=>\r\n                    <button disabled={disable} \r\n                        key={`button${index}`} \r\n                        className=\"game-btn\" value={index} \r\n                        onClick={clickhandler}>{item}\r\n                    </button>)\r\n                }\r\n            </div>\r\n            <div>\r\n                {win&&\r\n                <div className='game-winner-container' >\r\n                    <p>Congratulations {boolean? \"0 Wins\" : \"X Wins\"}</p>\r\n                    <button className='playAgain-btn' onClick={()=>{window.location.reload(false);}} >Play again</button>\r\n                </div>}\r\n                {draw&&\r\n                <div className='game-winner-container' >\r\n                    <p>Game is Draw</p>\r\n                    <button className='playAgain-btn' onClick={()=>{window.location.reload(false);}} >Play again</button>\r\n                </div>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Game\r\n","import React,{useState,useEffect} from 'react'\r\nimport Board from './components/Board';\r\nimport Game from './components/Game';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n    const [row, setrow] = useState(0);\r\n    const [column, setcolumn] = useState(0);\r\n    const [sequence, setsequence] = useState(0);\r\n    const [startgame, setstartgame] = useState(false);\r\n    const [game, setgame] = useState([]);\r\n    \r\n    if(row>0 && column>0){\r\n        var temp = new Array(row*column);\r\n    }\r\n    useEffect(() => {\r\n        if(row>0 && column>0){\r\n            temp.fill('');\r\n            setgame([...temp]);\r\n        }\r\n        \r\n    }, [row,column])\r\n    \r\n    return (\r\n        <div className='App' >\r\n            {!startgame ? \r\n                <Board \r\n                row={row}\r\n                column={column}\r\n                sequence={sequence}\r\n                setrow={setrow}\r\n                setcolumn={setcolumn}\r\n                setsequence={setsequence}\r\n                setstartgame={setstartgame}\r\n                /> \r\n                : \r\n                <Game\r\n                game={game}\r\n                setgame={setgame}\r\n                row={row}\r\n                column={column}\r\n                sequence={sequence}\r\n                />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));"],"sourceRoot":""}